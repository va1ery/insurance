// <auto-generated />
using System;
using Insurance_Company.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Insurance_Company.Migrations
{
    [DbContext(typeof(InsuranceCompanyContext))]
    [Migration("20201103151600_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Insurance_Company.Models.Dolzhnosti", b =>
                {
                    b.Property<int>("KodDolzhnosti")
                        .HasColumnName("Kod_dolzhnosti")
                        .HasColumnType("INT");

                    b.Property<string>("NaimenovanieDolzhnosti")
                        .IsRequired()
                        .HasColumnName("Naimenovanie_dolzhnosti")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Obyazannosti")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<double>("Oklad")
                        .HasColumnType("FLOAT");

                    b.Property<string>("Trebovaniya")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("KodDolzhnosti");

                    b.ToTable("Dolzhnosti");
                });

            modelBuilder.Entity("Insurance_Company.Models.GruppyKlientov", b =>
                {
                    b.Property<int>("KodGruppy")
                        .HasColumnName("Kod_gruppy")
                        .HasColumnType("INT");

                    b.Property<string>("Naimenovanie")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Opisanie")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("KodGruppy");

                    b.ToTable("Gruppy_klientov");
                });

            modelBuilder.Entity("Insurance_Company.Models.Klienty", b =>
                {
                    b.Property<int>("KodKlienta")
                        .HasColumnName("Kod_klienta")
                        .HasColumnType("INT");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataRozhdeniya")
                        .HasColumnName("Data_rozhdeniya")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Fio")
                        .IsRequired()
                        .HasColumnName("FIO")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("KodGruppy")
                        .HasColumnName("Kod_gruppy")
                        .HasColumnType("INT");

                    b.Property<string>("PasportnyeDannye")
                        .IsRequired()
                        .HasColumnName("Pasportnye_dannye")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Pol")
                        .IsRequired()
                        .HasColumnType("CHAR(1)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("VARCHAR(11)");

                    b.HasKey("KodKlienta");

                    b.HasIndex("KodGruppy");

                    b.ToTable("Klienty");
                });

            modelBuilder.Entity("Insurance_Company.Models.Polisy", b =>
                {
                    b.Property<int>("NomerPolisa")
                        .HasColumnName("Nomer_polisa")
                        .HasColumnType("INT");

                    b.Property<DateTime>("DataNachala")
                        .HasColumnName("Data_nachala")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataOkonchaniya")
                        .HasColumnName("Data_okonchaniya")
                        .HasColumnType("DATETIME");

                    b.Property<int>("KodKlienta")
                        .HasColumnName("Kod_klienta")
                        .HasColumnType("INT");

                    b.Property<int>("KodSotrudnika")
                        .HasColumnName("Kod_sotrudnika")
                        .HasColumnType("INT");

                    b.Property<int>("KodVidaPolisa")
                        .HasColumnName("Kod_vida_polisa")
                        .HasColumnType("INT");

                    b.Property<string>("OtmetkaOVyplate")
                        .IsRequired()
                        .HasColumnName("Otmetka_o_vyplate")
                        .HasColumnType("CHAR(1)");

                    b.Property<string>("OtmetkaObOkonchanii")
                        .IsRequired()
                        .HasColumnName("Otmetka_ob_okonchanii")
                        .HasColumnType("CHAR(1)");

                    b.Property<double>("Stoimost")
                        .HasColumnType("FLOAT");

                    b.Property<double>("SummaVyplaty")
                        .HasColumnName("Summa_vyplaty")
                        .HasColumnType("FLOAT");

                    b.HasKey("NomerPolisa");

                    b.HasIndex("KodKlienta");

                    b.HasIndex("KodSotrudnika");

                    b.HasIndex("KodVidaPolisa");

                    b.ToTable("Polisy");
                });

            modelBuilder.Entity("Insurance_Company.Models.Riski", b =>
                {
                    b.Property<int>("KodRiska")
                        .HasColumnName("Kod_riska")
                        .HasColumnType("INT");

                    b.Property<string>("Naimenovanie")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Opisanie")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<double>("SrednyayaVeroyatnost")
                        .HasColumnName("Srednyaya_veroyatnost")
                        .HasColumnType("FLOAT");

                    b.HasKey("KodRiska");

                    b.ToTable("Riski");
                });

            modelBuilder.Entity("Insurance_Company.Models.Sotrudniki", b =>
                {
                    b.Property<int>("KodSotrudnika")
                        .HasColumnName("Kod_sotrudnika")
                        .HasColumnType("INT");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataRozdeniya")
                        .HasColumnName("Data_rozdeniya")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Fio")
                        .IsRequired()
                        .HasColumnName("FIO")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("KodDolzhnosti")
                        .HasColumnName("Kod_dolzhnosti")
                        .HasColumnType("INT");

                    b.Property<string>("PasportnyeDannye")
                        .IsRequired()
                        .HasColumnName("Pasportnye_dannye")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Pol")
                        .IsRequired()
                        .HasColumnType("CHAR(1)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("VARCHAR(11)");

                    b.HasKey("KodSotrudnika");

                    b.HasIndex("KodDolzhnosti");

                    b.ToTable("Sotrudniki");
                });

            modelBuilder.Entity("Insurance_Company.Models.VidyPolisov", b =>
                {
                    b.Property<int>("KodVidaPolisa")
                        .HasColumnName("Kod_vida_polisa")
                        .HasColumnType("INT");

                    b.Property<int>("KodRiska")
                        .HasColumnName("Kod_riska")
                        .HasColumnType("INT");

                    b.Property<string>("Naimenovanie")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Opisanie")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Usloviya")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("KodVidaPolisa");

                    b.HasIndex("KodRiska");

                    b.ToTable("Vidy_polisov");
                });

            modelBuilder.Entity("Insurance_Company.Models.Klienty", b =>
                {
                    b.HasOne("Insurance_Company.Models.GruppyKlientov", "KodGruppyNavigation")
                        .WithMany("Klienty")
                        .HasForeignKey("KodGruppy")
                        .IsRequired();
                });

            modelBuilder.Entity("Insurance_Company.Models.Polisy", b =>
                {
                    b.HasOne("Insurance_Company.Models.Klienty", "KodKlientaNavigation")
                        .WithMany("Polisy")
                        .HasForeignKey("KodKlienta")
                        .IsRequired();

                    b.HasOne("Insurance_Company.Models.Sotrudniki", "KodSotrudnikaNavigation")
                        .WithMany("Polisy")
                        .HasForeignKey("KodSotrudnika")
                        .IsRequired();

                    b.HasOne("Insurance_Company.Models.VidyPolisov", "KodVidaPolisaNavigation")
                        .WithMany("Polisy")
                        .HasForeignKey("KodVidaPolisa")
                        .IsRequired();
                });

            modelBuilder.Entity("Insurance_Company.Models.Sotrudniki", b =>
                {
                    b.HasOne("Insurance_Company.Models.Dolzhnosti", "KodDolzhnostiNavigation")
                        .WithMany("Sotrudniki")
                        .HasForeignKey("KodDolzhnosti")
                        .IsRequired();
                });

            modelBuilder.Entity("Insurance_Company.Models.VidyPolisov", b =>
                {
                    b.HasOne("Insurance_Company.Models.Riski", "KodRiskaNavigation")
                        .WithMany("VidyPolisov")
                        .HasForeignKey("KodRiska")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
